@model DryAgentSystem.Models.Booking


@Scripts.Render("~/bundles/JQueryDatetimejs")
@Styles.Render("~/Content/JQueryDatetimecss")

<script src="~/JQuery/BookingTab.js"></script>

<script type="text/javascript">
    var BookingStatus = "@Html.Raw(@Model.BookingStatus)";
    var rateCountered = "@Html.Raw(@Model.RateCountered)";
    var transshipmenttype = "@Html.Raw(@Model.TransshipmentType)";
    var ratetype = "@Html.Raw(@Model.RateType)";
    var hasshipment = "@Html.Raw(@Model.hasshipment)";
</script>

@using (Html.BeginForm("BookingDetailsTab", "BookingDetails", FormMethod.Post, new { id = "BookingDetailForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="container">

            <div class="row">
                <div class="col-md-1">
                    <input type="submit" name="submit" id="Save" value="Save" class="btn btn-success forButtonWidth" />
                    <input type="submit" name="submit" id="Update" value="Update" class="btn btn-success forUpdateText" />
                    <input type="button" id="Edit" value="Edit" class="btn btn-info forButtonWidth" onclick="location.href='@Url.Action("Edit", "BookingDetails", new { bookingID = Model.BookingID })';" />
                </div>
                <div class="col-md-2">
                    <input type="button" id="Confirm" value="Confirm Booking" class="btn btn-info forButtonWidth" onclick="location.href='@Url.Action("Confirm", "BookingDetails", new { bookingID = Model.BookingID })';" />
                    <input type="button" id="Issue" value="Issue Booking" class="btn btn-info forButtonWidth" onclick="location.href='@Url.Action("Issue", "BookingDetails", new { bookingID = Model.BookingID })';" />
                </div>
                
                <div class="col-md-2 forTextAlignRight" style="margin-left:431px;">
                    @Html.LabelFor(model => model.QuoteRefID, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.TextBoxFor(model => model.QuoteRefID, new { @readonly = "readonly", @class = "form-control", style="width: 175px;" })
                    @*@Html.ValidationMessageFor(model => model.QuoteRefID, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="row" style="margin-top:7px;">
                <div class="col-md-4"></div>
                <div class="col-md-2 forTextAlignRight" style="margin-left:341px;">
                    @Html.LabelFor(model => model.BookingStatus, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.BookingStatus, new { htmlAttributes = new { @class = "form-control", style = "width: 175px;" } })
                    @* @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="row" style="margin-top:7px;">
                <div class="col-md-8"></div>
                <div class="col-md-2 forTextAlignRight" style="margin-left:-23px;">
                    @Html.LabelFor(model => model.BookingNo, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.BookingNo, new { htmlAttributes = new { @class = "form-control", style = "width: 175px;" } })
                    @Html.ValidationMessageFor(model => model.BookingNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row" style="margin-top:7px;">
                <div class="col-md-3">
                    <a href='@Url.Action("PrintBC", "BookingDetails", new { bookingId = Model.BookingID })' ; class="btn btn-outline-info" id="PrintBC" target="_blank">Print BC</a>
                    <a href='@Url.Action("PrintCRO", "BookingDetails", new { bookingId = Model.BookingID })' ; class="btn btn-outline-info CROalign" id="PrintCRO" target="_blank" style="margin-left:30px;">Print CRO</a>
                </div>
                <div class="col-md-2">
                    <input type="submit" name="submit" id="Shipment" value="Create Shipment" class="btn btn-info forButtonWidth" />
                </div>
                <div class="col-md-3"></div>
                <div class="col-md-2 forTextAlignRight" style="margin-left:-23px;">
                    @Html.LabelFor(model => model.ContainerReleaseOrderNo, htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-2">
                    @Html.EditorFor(model => model.ContainerReleaseOrderNo, new { htmlAttributes = new { @class = "form-control", style = "width: 175px;" } })
                    @Html.ValidationMessageFor(model => model.ContainerReleaseOrderNo, "", new { @class = "text-danger" })
                </div>
            </div>
            <hr />

            <div class="form-group">
                @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })*@
                <h3 class="text-success">@TempData["message"]</h3>
                @Html.HiddenFor(model => model.BookingID, new { htmlAttributes = new { @class = "form-control" } })
                @*<h3 class="text-success">@ViewBag.Message</h3>*@
            </div>

            <div class="form_group">
                <fieldset class="quotationfieldset">
                    <legend class="quotationfieldsetlegend">&nbsp; Quotation Details: &nbsp;</legend>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.GTotalSalesCal, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.GTotalSalesCal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.GTotalSalesCal, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label", id = "rateCounteredLabel" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-2">
                            @Html.LabelFor(model => model.RateCountered, htmlAttributes: new { @class = "control-label", id = "rateCounteredLabel" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.RateCountered, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.RateCountered, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.CompanyName)
                        </div>
                        <div class="col-md-5 forleftalignquantity">
                            @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.EquipmentType, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.EquipmentType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EquipmentType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.LoadPort, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.LoadPort, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoadPort, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.DischargePort, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.DischargePort, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DischargePort, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.UNNo, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.UNNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UNNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.TransshipmentType, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.TransshipmentType, "Yes", htmlAttributes: new { @id = "TransshipmentTypeYes" })
                            Yes  &nbsp;&nbsp;&nbsp;
                            @Html.RadioButtonFor(model => model.TransshipmentType, "No", htmlAttributes: new { @id = "TransshipmentTypeNo" })
                            No
                            @Html.ValidationMessageFor(model => model.TransshipmentType, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.LabelFor(model => model.TransshipmentPort, htmlAttributes: new { @class = "control-label", @id = "TransshipmentPortLabel", style= "padding-right: 20px;padding-left:20px;" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.TransshipmentPort, new { htmlAttributes = new { @class = "form-control", @id = "TransshipmentPortText" } })
                            @Html.ValidationMessageFor(model => model.TransshipmentPort, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br>
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.RateType, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2">
                            @Html.RadioButtonFor(model => model.RateType, "REEFER", htmlAttributes: new { @id = "RateTypeReefer" })
                            REEFER  &nbsp;&nbsp;&nbsp;
                            @Html.RadioButtonFor(model => model.RateType, "DRY", htmlAttributes: new { @id = "RateTypeDry" })
                            Dry
                            @Html.ValidationMessageFor(model => model.RateType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Humidity, htmlAttributes: new { @class = "control-label", @id = "HumidityLabel", style = "display: none;" })
                        </div>
                        <div class="col-md-2 forleftalign" style="margin-left:-40px;">
                            @Html.EditorFor(model => model.Humidity, new { htmlAttributes = new { @class = "form-control", style = "display: none;" } })
                            @Html.ValidationMessageFor(model => model.Humidity, "", new { @class = "text-danger", @id = "HumidityValid" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Temperature, htmlAttributes: new { @class = "control-label", @id = "TemperatureLabel", style = "display: none;" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control", style = "display: none;" } })
                            @Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger", @id = "TemperatureValid" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.Ventilation, htmlAttributes: new { @class = "control-label", @id = "VentilationLabel", style = "display: none;" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.Ventilation, new { htmlAttributes = new { @class = "form-control", style = "display: none;" } })
                            @Html.ValidationMessageFor(model => model.Ventilation, "", new { @class = "text-danger", @id = "VentilationValid" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.PlaceOfReceipt, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.PlaceOfReceipt, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PlaceOfReceipt, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.PlaceOfDelivery, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.PlaceOfDelivery, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PlaceOfDelivery, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.IMO, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.IMO, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IMO, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br />
                    <div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.POLFreeDays, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalignquantity">
                            @Html.EditorFor(model => model.POLFreeDays, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.POLFreeDays, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.PODFreeDays, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.PODFreeDays, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PODFreeDays, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.CargoType, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.TextAreaFor(model => model.CargoType, new { rows = "4", cols = "29", style = "resize:none;" })
                            @Html.ValidationMessageFor(model => model.CargoType, "", new { @class = "text-danger" })
                        </div>

                    </div>
                </fieldset>
                <br>
                <hr />
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AddressAttn, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.AddressAttn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressAttn, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AddressFax, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.AddressFax, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressFax, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AddressTel, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.AddressTel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressTel, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.AddressTo, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.AddressTo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressTo, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.ServiceMode, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.ServiceMode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ServiceMode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <!--<div class="row">-->
                @*<div class="col-md-2">
                        @Html.LabelFor(model => model.LoadAgent, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.LoadAgent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.LoadAgent, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.DischAgent, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.DischAgent, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DischAgent, "", new { @class = "text-danger" })
                    </div>*@
                <!--</div>
                <br />-->
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Commodity, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.Commodity, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Commodity, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1">
                        @Html.LabelFor(model => model.CommodityGroup, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-1"><span class="RequiredAstrik">*</span></div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.CommodityGroup, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CommodityGroup, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                @*<div class="row">
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.EffectiveDate, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-4 forleftalign">
                                @Html.TextBoxFor(model => model.EffectiveDate, "{0:MM-dd-yyyy}", new { @class = "ui-datepicker form-control", @id = "startDatePicker" })
                                @Html.ValidationMessageFor(model => model.EffectiveDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-2">
                                @Html.LabelFor(model => model.Validity, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-md-4 forleftalign">
                                @Html.TextBoxFor(model => model.Validity, "{0:MM-dd-yyyy}", new { @class = "ui-datepicker form-control", @id = "endDatePicker" })
                                @Html.ValidationMessageFor(model => model.Validity, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    <br />*@
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CutoffDate, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-4 forleftalign">
                        @Html.TextBoxFor(model => model.CutoffDate, "{0:MM-dd-yyyy HH:mm}", new { @class = "ui-datepicker form-control", @id = "cutoffDatePicker"})
                        @Html.ValidationMessageFor(model => model.CutoffDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CROPickUpDate, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-4 forleftaligngrossunit" >
                        @Html.TextBoxFor(model => model.CROPickUpDate, "{0:MM-dd-yyyy}", new { @class = "ui-datepicker form-control", @id = "pickupDatePicker" })
                        @Html.ValidationMessageFor(model => model.CROPickUpDate, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2 bookingAdjustBigLabel">
                            @Html.LabelFor(model => model.CutoffDateandTime, htmlAttributes: new { @class = "control-label" })
                        </div>

                        <div class="col-md-4 forleftalign">
                            @Html.TextBoxFor(model => model.CutoffDateandTime, "{0:H:mm:ss tt}", new { @class = "form-control", @id = "cutoffDateTimePicker" })
                            @Html.ValidationMessageFor(model => model.CutoffDateandTime, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CollectionYard, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.DropDownListFor(model => model.CollectionYard, new SelectList(ViewBag.CollectionList, "Text", "Text"),
                            "Select Collection Yard", new { @class = "ui-selectmenu-menu", @id = "collectionDropDownList" })
                        @Html.ValidationMessageFor(model => model.CollectionYard, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Grossweight, htmlAttributes: new { @class = "control-label" })
                        <span class="RequiredAstrik">*</span>
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.Grossweight, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Grossweight, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.GrossweightMeasurement, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.EditorFor(model => model.GrossweightMeasurement, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GrossweightMeasurement, "", new { @class = "text-danger" })
                    </div>
                    @*<div class="col-md-2">
                            @Html.LabelFor(model => model.PaymentTerms, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.DropDownListFor(model => model.PaymentTerms, new SelectList(ViewBag.PaymentList, "Text", "Text"),
                           "Select Payment Terms", new { @class = "ui-selectmenu-menu", @id = "paymentDropDownList" })
                            @Html.ValidationMessageFor(model => model.PaymentTerms, "", new { @class = "text-danger" })
                        </div>*@
                </div>
                <br />
                @*<div class="row">
                        <div class="col-md-2">
                            @Html.LabelFor(model => model.LoadTerminal, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.LoadTerminal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoadTerminal, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-1">
                            @Html.LabelFor(model => model.DischargeTerminal, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-1"></div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.DischargeTerminal, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DischargeTerminal, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2 bookingSocLabel">
                            @Html.LabelFor(model => model.SOC, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.SOC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SOC, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <br>*@
                <div class="row">
                    @*<div class="col-md-2 bookingSocLabel">
                            @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "control-label" })
                        </div>
                        <div class="col-md-2 forleftalign">
                            @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
                        </div>*@
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.Remark, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-3 forleftalign">
                        @Html.TextAreaFor(model => model.Remark, new { rows = "4", cols = "29", style = "resize:none;" })
                        @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CRORemarks, htmlAttributes: new { @class = "control-label" })
                    </div>
                    <div class="col-md-2 forleftalign">
                        @Html.TextAreaFor(model => model.CRORemarks, new { rows = "4", cols = "29", style = "resize:none;" })
                        @Html.ValidationMessageFor(model => model.CRORemarks, "", new { @class = "text-danger" })
                    </div>
                </div>
                <br />
            </div>
        </div>
    </div>
    @Html.HiddenFor(model => model.CollectionYard)
    @Html.HiddenFor(model => model.RateType)
    @Html.HiddenFor(model => model.ShipmentTerm)
    @Html.HiddenFor(model => model.UniversalSerialNr)
    @Html.HiddenFor(model => model.Shipper)
}